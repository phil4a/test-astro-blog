---
export const prerender = false;

import BaseLayout from "../../layouts/BaseLayout.astro";
import { Picture } from "astro:assets";

const consumerKey = import.meta.env.BITCAR_CONSUMER_KEY;
const consumerSecret = import.meta.env.BITCAR_CONSUMER_SECRET;
const siteUrl = import.meta.env.BITCAR_API_URL;

const lang = "en";

const res = await fetch(
  `${siteUrl}/wp-json/wc/v3/products?per_page=15&order=desc&orderby=date&lang=en&_embed`,
  {
    headers: {
      //@ts-ignore
      Authorization: `Basic ${Buffer.from(`${consumerKey}:${consumerSecret}`).toString("base64")}`,
    },
  },
);

const products = await res.json();

const { slug } = Astro.params;

const product = products.find((p) => p.slug === slug);

const pageTitle = `${product.name}`;
---

<BaseLayout pageTitle={pageTitle}>
  <div class="product">
    <div class="left">
      <Picture
        width={400}
        height={400}
        widths={[400, 800]}
        alt={product.name}
        src={product.images[0]?.src}
        formats={["avif", "webp", "jpg"]}
        quality={"low"}
        class="product-image"
      />
    </div>
    <div class="right">
      <h1 class="product-title">{product.name}</h1>
      <p class="product-description" set:html={product.description} />
      <p class="product-price" set:html={product.price_html} />
      <div class="product__characteristics char-product">
        {
          product.attributes.map((attr) => (
            <div class="char-product__item">
              <div class="char-product__prop">{attr.name}</div>
              <div class="char-product__value">
                {attr.options.map((opt) => opt).join(", ")}
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </div>
</BaseLayout>

<style>
  .product {
    display: flex;
    gap: 30px;
  }

  .left {
    flex: 1 1 50%;
  }

  .right {
    flex: 1 1 50%;
  }

  .product-image {
    width: 100%;
    height: auto;
  }
  .product-price {
    font-size: 20px;
    font-size: bold;
  }

  .char-product {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: 0.625rem;
  }

  .char-product__item {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-box-align: baseline;
    -ms-flex-align: baseline;
    align-items: baseline;
  }

  .char-product__item::before {
    -webkit-box-ordinal-group: 2;
    -ms-flex-order: 1;
    order: 1;
    color: #767676;
    content: "";
    -webkit-box-flex: 1;
    -ms-flex-positive: 1;
    flex-grow: 1;
    border-bottom: 1px dotted #ccc;
    margin: 0 0.375rem;
  }

  .char-product__prop {
    color: #767676;
    -webkit-box-ordinal-group: 1;
    -ms-flex-order: 0;
    order: 0;
  }

  @supports (
    font-size: clamp(0.875rem, 0.8318965517rem + 0.2155172414vw, 1rem)
  ) {
    .char-product__prop {
      font-size: clamp(0.875rem, 0.8318965517rem + 0.2155172414vw, 1rem);
    }
  }

  @supports not (
    font-size: clamp(0.875rem, 0.8318965517rem + 0.2155172414vw, 1rem)
  ) {
    .char-product__prop {
      font-size: calc(0.875rem + 0.125 * (100vw - 20rem) / 58);
    }
  }

  .char-product__value {
    -webkit-box-ordinal-group: 3;
    -ms-flex-order: 2;
    order: 2;
    color: #1a1a1a;
    order: 2;
  }
  .char-product__value:not(:last-child) {
    margin-right: 4px;
  }
  .char-product__value:not(:last-child):after {
    content: ",";
  }

  @supports (
    font-size: clamp(0.875rem, 0.8318965517rem + 0.2155172414vw, 1rem)
  ) {
    .char-product__value {
      font-size: clamp(0.875rem, 0.8318965517rem + 0.2155172414vw, 1rem);
    }
  }

  @supports not (
    font-size: clamp(0.875rem, 0.8318965517rem + 0.2155172414vw, 1rem)
  ) {
    .char-product__value {
      font-size: calc(0.875rem + 0.125 * (100vw - 20rem) / 58);
    }
  }
</style>
